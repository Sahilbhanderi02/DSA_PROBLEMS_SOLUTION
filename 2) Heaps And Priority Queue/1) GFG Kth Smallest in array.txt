Given an array arr[] and an integer k where k is smaller than the size of the array, the task is to find the kth smallest element in the given array.

Follow up: Don't solve it using the inbuilt sort function.

Examples :

Input: arr[] = [7, 10, 4, 3, 20, 15], k = 3
Output:  7
Explanation: 3rd smallest element in the given array is 7.

Input: arr[] = [2, 3, 1, 20, 15], k = 4 
Output: 15
Explanation: 4th smallest element in the given array is 15.


Expected Time Complexity: O(n+(max_element) )
Expected Auxiliary Space: O(max_element)


Constraints:
1 <= arr.size <= 106
1<= arr[i] <= 106
1 <= k <= n


Soluiton 3:  PriorityQueue thi minheap TC:O(nlog(n)) & SC:O(n)

public static int kthSmallest(int[] arr, int k) {
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        
        for(int i=0 ; i <arr.length; i ++)
        {
            pq.add(arr[i]);
        }
        int ans=0;
        for(int i=1; i <=k;i++)
        {
            ans=pq.remove();
        }
        return ans ;
    }


Solution 4 :  

 public static int kthSmallest(int[] arr, int k) {
        PriorityQueue<Integer> pq=new PriorityQueue<>(Collections.reverseOrder());
        
        for(int i=0 ; i <arr.length; i ++)
        {
            pq.add(arr[i]);
            if(pq.size()>k) pq.remove();
        }
        
        return pq.peek() ;
    }